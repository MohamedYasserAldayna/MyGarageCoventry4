const sqlite = require('sqlite3');
const db = new sqlite.Database('mygarage1.db');

const createUserTable = `
CREATE TABLE IF NOT EXISTS USER (
  ID INTEGER PRIMARY KEY AUTOINCREMENT,
  USERNAME TEXT UNIQUE NOT NULL,
  EMAIL TEXT UNIQUE NOT NULL,
  PASSWORD TEXT NOT NULL,
  ROLE TEXT NOT NULL CHECK (ROLE IN ('admin', 'customer', 'service_center', 'part_seller')),
  BUSINESS_NAME TEXT,
  CREATED_AT TEXT DEFAULT CURRENT_TIMESTAMP
)`;

const createPartTypeTable = `
CREATE TABLE IF NOT EXISTS PART_TYPE (
  ID INTEGER PRIMARY KEY AUTOINCREMENT,
  NAME TEXT UNIQUE NOT NULL
)`;

const createCarBrandTable = `
CREATE TABLE IF NOT EXISTS CAR_BRAND (
  ID INTEGER PRIMARY KEY AUTOINCREMENT,
  NAME TEXT UNIQUE NOT NULL
)`;

const createProductTable = `
CREATE TABLE IF NOT EXISTS PRODUCT (
  ID INTEGER PRIMARY KEY AUTOINCREMENT,
  NAME TEXT NOT NULL,
  DESCRIPTION TEXT,
  PRICE REAL NOT NULL,
  STOCK INTEGER NOT NULL,
  IMAGE_URL TEXT,
  PART_TYPE_ID INT NOT NULL,
  SELLER_ID INT NOT NULL,
  CAR_BRAND_ID INT NOT NULL,
  CREATED_AT TEXT DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (CAR_BRAND_ID) REFERENCES CAR_BRAND(ID),
  FOREIGN KEY (PART_TYPE_ID) REFERENCES PART_TYPE(ID),
  FOREIGN KEY (SELLER_ID) REFERENCES USER(ID)
)`;

const createProductCarBrandTable = `
CREATE TABLE IF NOT EXISTS PRODUCT_CAR_BRAND (
  ID INTEGER PRIMARY KEY AUTOINCREMENT,
  PRODUCT_ID INT NOT NULL,
  CAR_BRAND_ID INT NOT NULL,
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID),
  FOREIGN KEY (CAR_BRAND_ID) REFERENCES CAR_BRAND(ID)
)`;

const createAppointmentTable = `
CREATE TABLE IF NOT EXISTS APPOINTMENT (
  ID INTEGER PRIMARY KEY AUTOINCREMENT,
  USER_ID INT NOT NULL,
  SERVICE_CENTER_ID INT NOT NULL,
  SERVICE_CENTER TEXT NOT NULL,
  DATE TEXT NOT NULL,
  STATUS TEXT DEFAULT 'pending',
  CREATED_AT TEXT DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (USER_ID) REFERENCES USER(ID),
  FOREIGN KEY (SERVICE_CENTER_ID) REFERENCES USER(ID)
)`;

const createOrderTable = `
CREATE TABLE IF NOT EXISTS "ORDER" (
  ID INTEGER PRIMARY KEY AUTOINCREMENT,
  USER_ID INT NOT NULL,
  TOTAL_PRICE REAL NOT NULL,
  STATUS TEXT DEFAULT 'processing',
  CREATED_AT TEXT DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (USER_ID) REFERENCES USER(ID)
)`;

const createOrderItemsTable = `
CREATE TABLE IF NOT EXISTS ORDER_ITEM (
  ID INTEGER PRIMARY KEY AUTOINCREMENT,
  ORDER_ID INT NOT NULL,
  PRODUCT_ID INT NOT NULL,
  QUANTITY INT NOT NULL,
  PRICE REAL NOT NULL,
  FOREIGN KEY (ORDER_ID) REFERENCES "ORDER"(ID),
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID)
)`;

const createCartTable = `
CREATE TABLE IF NOT EXISTS CART (
  ID INTEGER PRIMARY KEY AUTOINCREMENT,
  USER_ID INT NOT NULL,
  PRODUCT_ID INT NOT NULL,
  QUANTITY INT NOT NULL,
  UNIQUE USER_PRODUCT (USER_ID, PRODUCT_ID),
  FOREIGN KEY (USER_ID) REFERENCES USER(ID),
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID)
)`;
const alterCartTable =`
CREATE UNIQUE INDEX USER_PRODUCT ON CART(USER_ID, PRODUCT_ID)`

module.exports = {
  db,
  createUserTable,
  createPartTypeTable,
  createCarBrandTable,
  createProductTable,
  createProductCarBrandTable,
  createAppointmentTable,
  createOrderTable,
  createOrderItemsTable,
  createCartTable,
};
